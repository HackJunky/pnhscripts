/*-------------------------------
Infected Wars
anti_map_exploit.lua
Server
--------------------------------*/

-- Use the map exploit blocker tool (admins can type "!swep <ingamename> admin_exploitblocker" to get it) to
-- add exploit protection to maps. New points are automatically saved.

GM.MapExploits = {}

function MapExploitInit()
	
	GAMEMODE.MapExploits = {}
	
	local map = game.GetMap()
	local path = "infectedwars/maps/"..map..".txt"
	if not file.Exists( path ) then
		return
	end
	
	local contents = file.Read( path )

	local lines = string.Explode("\n",contents)
	local values = {}
	local x, y, z
	
	for k, v in pairs(lines) do
		values = string.Explode(" ",v)
		x = tostring(values[1])
		y = tostring(values[2])
		z = tostring(values[3])
		GAMEMODE.MapExploits[k] = {}
		GAMEMODE.MapExploits[k].origin = Vector(x,y,z)
		GAMEMODE.MapExploits[k].type = values[4]
		GAMEMODE.MapExploits[k].bsize = tonumber(values[5])
	end

end
hook.Add("Initialize","mapexploitinit",MapExploitInit)

function MapExploitThink()
	
	if #GAMEMODE.MapExploits <= 0 then return end
	
	local found = {}
	local vec = nil
	local sz = 0
	for k, v in pairs(GAMEMODE.MapExploits) do
		sz = v.bsize
		vec = Vector(sz,sz,sz) -- for some reason I couldn't put v.bsize in it straight away
		found = ents.FindInBox(v.origin-vec,v.origin+vec)
		
		for _, pl in pairs(found) do
			
			if ValidEntity(pl) and pl:IsPlayer() and pl:Alive() and not (ValidEntity(pl:GetActiveWeapon()) and pl:GetActiveWeapon():GetClass() == "admin_exploitblocker") then
				
				local message = ""
				if v.type == "death" then
					pl:Kill()
					message = "MAP EXPLOIT BLOCK: you were killed!"
				end
				if v.type == "repel" then
					pl:SetVelocity( (pl:GetPos()-v.origin):GetNormal()*600 )
					message = "MAP EXPLOIT BLOCK: you were repelled!"
				end
				
				pl.LastExploitWarning = pl.LastExploitWarning or 0
				if (pl.LastExploitWarning+3 < CurTime()) then
					pl:ChatPrint(message)
				end
				pl.LastExploitWarning = CurTime()
				
			end
		end
	end
	
end
hook.Add("Think","mapexploitthink",MapExploitThink)

function SendMapExploits( pl )
	if #GAMEMODE.MapExploits <= 0 then return end

	local maxsize = 10
	
	local numexploits = #GAMEMODE.MapExploits
	local nummessages = 1
	while( numexploits > maxsize ) do
		nummessages = nummessages + 1
		numexploits = numexploits - 10
	end
	
	local rest = (#GAMEMODE.MapExploits) % 10

	local start = 1
	local num = 1
	local reset = true
	for k = 1, nummessages do
		if k > 1 then
			reset = false
		end
		if k+1 > nummessages then
			num = rest
		else
			num = 10
		end
		umsg.Start("mapexploits",pl)
			umsg.Bool(reset)
			umsg.Short(num)
			umsg.Short(start)
			for i = 1, num do
				local v = GAMEMODE.MapExploits[start+i-1]
				umsg.Vector(v.origin)
				umsg.Short(v.bsize)
				umsg.String(v.type)
			end
		umsg.End()
		start = start + maxsize
	end
end

function MapExploitWrite()

	local map = game.GetMap()
	local path = "infectedwars/maps/"..map..".txt"
	
	if #GAMEMODE.MapExploits <= 0 then 
		if file.Exists( path ) then
			file.Delete( path )
		end
		return 
	end

	local contentstring = ""
	for k, v in pairs(GAMEMODE.MapExploits) do
		contentstring = contentstring..""..v.origin.x.." "..v.origin.y.." "..v.origin.z.." "..v.type.." "..v.bsize
		if k < #GAMEMODE.MapExploits then
			contentstring = contentstring.."\n"
		end
	end
	file.Write(path, contentstring)
	
end	