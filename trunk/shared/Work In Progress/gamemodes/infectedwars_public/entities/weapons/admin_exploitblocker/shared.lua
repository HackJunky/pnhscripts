-- Remover gun by Garry, edited by ClavusElite

if SERVER then
	AddCSLuaFile("shared.lua")
end

SWEP.HoldType = "pistol"

if CLIENT then
	SWEP.PrintName = "Exploit Blocker Tool"
	SWEP.DrawAmmo = false
	SWEP.DrawCrosshair = true
	SWEP.ViewModelFOV = 70
	SWEP.ViewModelFlip = false
	SWEP.CSMuzzleFlashes = false
	SWEP.Author	= "ClavusElite"
	SWEP.Slot = 0
	SWEP.SlotPos = 10
	SWEP.Contact		= ""
    SWEP.Purpose		= ""
    SWEP.Instructions	= "Left mouse to place, (Shift + ) right mouse to change size, Shift + left mouse to change type, R to delete nearby boxes"
end


SWEP.ViewModel			= "models/weapons/v_toolgun.mdl"
SWEP.WorldModel			= "models/weapons/w_toolgun.mdl"

SWEP.Spawnable = false
SWEP.AdminSpawnable	= true

SWEP.Primary.Recoil			= 2
SWEP.Primary.Unrecoil		= 7
SWEP.Primary.ClipSize = -1
SWEP.Primary.Damage = 0
SWEP.Primary.DefaultClip = -1
SWEP.Primary.Automatic = false
SWEP.Primary.Ammo = "none"
SWEP.Primary.Delay = 0.5
SWEP.Primary.Cone = 0
SWEP.ConeMoving	= 0
SWEP.ConeCrouching = 0

SWEP.Secondary.ClipSize = -1
SWEP.Secondary.DefaultClip = -1
SWEP.Secondary.Automatic = true
SWEP.Secondary.Ammo	= "none"
SWEP.Secondary.Delay = 0.3

SWEP.Primary.Sound			= Sound("buttons/button9.wav")

SWEP.Modes = { "repel", "death" }
SWEP.Mode = 1 
SWEP.Size = 32
SWEP.Origin = Vector(0,0,0)

function SWEP:Initialize()
	self.Mode = 1 
	self.Weapon:SetNetworkedInt("BoxMode",self.Mode)
	self.Size = 32
	self.Weapon:SetNetworkedInt("BoxSize", self.Size)
end

function SWEP:PlaceExploitBlock( )

	local tab = {}
	tab.origin = self.Origin
	tab.bsize = self.Size
	tab.type = self.Modes[self.Mode]
	
	table.insert(GAMEMODE.MapExploits, tab)

	-- Send the new data
	local rec =  RecipientFilter()
	for k, v in pairs(player.GetAll()) do
		if v:IsAdmin() then
			rec:AddPlayer(v)
		end
	end
	umsg.Start("mapexploitssingle",rec)
		umsg.Vector(tab.origin)
		umsg.Short(tab.bsize)
		umsg.String(tab.type)
	umsg.End()
end

/*---------------------------------------------------------
   Name:	LeftClick
   Desc:	Remove a single entity
---------------------------------------------------------*/  

function SWEP:PrimaryAttack()
	self.Weapon:SetNextPrimaryFire(CurTime() + self.Primary.Delay)

	local pos = self.Owner:GetAimVector()
	 
	if self.Owner:KeyDown(IN_SPEED) then
		if SERVER then
			self.Mode = self.Mode + 1
			if self.Mode > #self.Modes then
				self.Mode = 1
			end
			self.Weapon:SetNetworkedInt("BoxMode",self.Mode)
			self.Owner:ChatPrint("-- Mode set to '"..self.Modes[self.Mode].."' --")
		end
	else
		if SERVER then
			self:PlaceExploitBlock()
			self.Owner:ChatPrint("-- Placed block at "..tostring(self.Origin).." --")
		end
		self.Weapon:EmitSound(self.Primary.Sound)
		self.Weapon:SendWeaponAnim(ACT_VM_PRIMARYATTACK)
		self.Owner:SetAnimation( PLAYER_ATTACK1 )
	end

	if CLIENT then
		self.Weapon:SetNetworkedFloat("LastShootTime", CurTime())
	end
end



function SWEP:SecondaryAttack()		-- Called when we press secondary fire
	self.Weapon:SetNextSecondaryFire(CurTime() + self.Secondary.Delay)	-- Don't shoot again until the delay has expired
	
	if SERVER then
		local add = 8
		if self.Owner:KeyDown(IN_SPEED) then
			add = -8
		end
		
		if self.Size < 16 and add < 0 then
			self.Owner:ChatPrint("-- Can't make the size any smaller! --")
		else
			self.Size = self.Size + add
			self.Owner:ChatPrint("-- Size set to "..self.Size.." --")
		end
		
		self.Weapon:SetNetworkedInt("BoxSize", self.Size)
		
	elseif CLIENT then
		self.Weapon:SetNetworkedFloat("LastShootTime", CurTime())
	end

end

SWEP.ReloadDelay = 0

function SWEP:Reload()
	
	if CurTime() < self.ReloadDelay then return end
	
	if #GAMEMODE.MapExploits <= 0 then 
		if CLIENT then
			self.Owner:ChatPrint("-- You haven't placed any blocks yet! --")
		end
		self.ReloadDelay = CurTime() + 0.5
		return 
	end
	
	local count = 0
	local tokeep = {}
	for k, v in pairs(GAMEMODE.MapExploits) do
		if v.origin:Distance(self.Owner:GetPos()+self.Owner:GetAimVector()*64) < 128 then
			count = count + 1
		else
			table.insert(tokeep,v)
		end
	end
	
	GAMEMODE.MapExploits = tokeep
	
	if CLIENT then
		if count == 0 then
			self.Owner:ChatPrint("-- No blocks nearby! --")
		else
			self.Owner:ChatPrint("-- Deleted "..count.." nearby block(s) --")
		end
	end
	
	self.ReloadDelay = CurTime() + 0.5
	
	if SERVER then
		for k, v in pairs(player.GetAll()) do
			if v:IsAdmin() then
				SendMapExploits( v )
			end
		end
	end
end

function SWEP:Think()
	self.Origin = self.Owner:GetShootPos()+self.Owner:GetAimVector()*64
end

function SWEP:Holster( wep )
	return true
end 

function SWEP:Deploy()
	self.Mode = 1 
	self.Weapon:SetNetworkedInt("BoxMode",self.Mode)
	self.Size = 32
	self.Weapon:SetNetworkedInt("BoxSize", self.Size)
	self.Origin = Vector(0,0,0)
	self.Weapon:SendWeaponAnim(ACT_VM_DRAW)
	return true
end 

function SWEP:DrawHUD( )
	
	local points = {}
	local screen = nil
	
	self.Size = self.Weapon:GetNetworkedInt("BoxSize") or 32
	self.Mode = self.Weapon:GetNetworkedInt("BoxMode") or 1
	
	local blocklist = table.Copy(GAMEMODE.MapExploits)
	table.insert(blocklist, { origin = self.Origin, bsize = self.Size, type = self.Modes[self.Mode], col = Color(150,20,20) })
	
	for k, v in pairs(blocklist) do
		screen = v.origin:ToScreen()
		points = {}
		if screen.x > 0 and screen.x < w and screen.y > 0 and screen.y < h then
			table.insert(points, (v.origin+Vector(v.bsize,v.bsize,v.bsize)):ToScreen())
			table.insert(points, (v.origin+Vector(-v.bsize,v.bsize,v.bsize)):ToScreen())
			table.insert(points, (v.origin+Vector(-v.bsize,-v.bsize,v.bsize)):ToScreen())
			table.insert(points, (v.origin+Vector(v.bsize,-v.bsize,v.bsize)):ToScreen())
			table.insert(points, (v.origin+Vector(v.bsize,v.bsize,-v.bsize)):ToScreen())
			table.insert(points, (v.origin+Vector(-v.bsize,v.bsize,-v.bsize)):ToScreen())
			table.insert(points, (v.origin+Vector(-v.bsize,-v.bsize,-v.bsize)):ToScreen())
			table.insert(points, (v.origin+Vector(v.bsize,-v.bsize,-v.bsize)):ToScreen())
			
			draw.SimpleText( "- Block "..k.." -\nType: "..v.type, "default", screen.x, screen.y, Color(255,0,0), TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER )
			
			if v.col then
				surface.SetDrawColor(v.col)
			else
				surface.SetDrawColor(Color(255,0,0))
			end
			
			for k, v in pairs( points ) do
				-- draws a block
				if k % 4 == 0 then
					surface.DrawLine(v.x,v.y,points[k-3].x,points[k-3].y)
				else
					surface.DrawLine(v.x,v.y,points[k+1].x,points[k+1].y)
				end
				if k <= 4 then
					surface.DrawLine(v.x,v.y,points[k+4].x,points[k+4].y)
				end
			end
			
		end		
		
	end
end